

// 
// 
//    VARIABLES
//    RESPONSIVE GRID
// 
// 


$base-m3:    7px;
$base-m2:    9px;
$base-m1:    12px;
$base:       16px;  // 'minus' values
  $base2:    $base*2;
$base-p1:    21px;  // Base Size
$base-p2:    28px;  // 'plus' values
$base-p3:    37px;
$base-p4:    50px;
$base-p5:    67px;
$base-p6:    89px;
$base-p7:   119px;
$base-p8:   159px;




// these are just the bootstrap defaults converted to my own vars

// xs 0   - 767
// sm 768 - 991
// md 992 - 1199
// lg 1200 + 

// b/c of pixel density, these descriptions are just for ease of describing width
// shouldn't matter what devices people use

// "mobile"
$width_site_min: 360px; // absolute minimum site width
$width_xs_min: 0px !default; 
$width_xs_max: 767px !default;

$width_magic: 660px !default; // somehow this seems to be the magical breaking point

// "tablet"
$width_sm_min: 768px !default;
$width_sm_max: 991px !default;

// "desktop"
$width_md_min: 992px !default;
$width_md_max: 1199px !default;

// "wide"
$width_lg_min: 1200px !default;


// 
//    RESPONSIVE STUFF
//    usage:
//      @include screen-mobile {
//        color: red;
//      }
// 

@mixin screen-xs-only {
  @media (max-width: $width_xs_max) {
    @content;
  }
}
  @mixin screen-xs {
    @include screen-xs-only {
      @content;
    }
  }

// below 'magic' point
@mixin screen-magic-down {
  @media (max-width: $width_magic) {
    @content;
  }
}
  // above 'magic' point
  @mixin screen-magic-up {
    @media (min-width: $width_magic) {
      @content;
    }
  }

// tablet and bigger
@mixin screen-sm {
  @media (min-width: $width_sm_min) {
    @content;
  }
}
  // tablet and smaller
  @mixin screen-sm-down {
    @media (min-width: $width_xs_min) and (max-width: $width_sm_max){
      @content;
    }
  }
  @mixin screen-sm-only {
    @media (min-width: $width_sm_min) and (max-width: $width_sm_max){
      @content;
    }
  }

// desktop and bigger
@mixin screen-md {
  @media (min-width: $width_md_min) {
    @content;
  }
}
  // desktop and smaller
  @mixin screen-md-down {
    @media (min-width: $width_xs_min) and (max-width: $width_md_max){
      @content;
    }
  }
  @mixin screen-md-only {
    @media (min-width: $width_md_min) and (max-width: $width_md_max){
      @content;
    }
  }

// wide (and up)
// wide and smaller would just be everything
@mixin screen-lg {
  @media (min-width: $width_lg_min) {
    @content;
  }
}


// custom scenarios

@mixin screen-above ($min) {
  @media (min-width: $min) {
    @content;
  }
}

@mixin screen-below ($max) {
  @media (max-width: $max) {
    @content;
  }
}

// show & hide;



._hidden-mobile {
  @media (max-width: $width_xs_max) {
    display: none;
  }
}
._hidden-tablet-down {
  @media (max-width: $width_sm_max) {
    display: none;
  }
}
  ._hidden-tablet-only {
    @media (min-width: $width_sm_min) and (max-width: $width_sm_max) {
      display: none;
    }
  }
  ._hidden-tablet-up {
    @media (min-width: $width_sm_min) {
      display: none;
    }
  }
._hidden-desktop-down {
  @media (max-width: $width_md_max) {
    display: none;
  }
}
  ._hidden-tablet-up {
    @media (min-width: $width_md_min) {
      display: none;
    }
  }

._hidden-magic-up {
  @media (min-width: $width_magic) {
    display: none;
  }
}

  ._hidden-magic-to-tablet {
    @media (min-width: $width_magic) and (max-width: $width_sm_min) {
      display: none;
    }
  }



._show-mobile-only {
  display: none;
  @media (max-width: $width_xs_max) {
    display: inherit;
  }
}
._show-tablet-up {
  display: none;
  @media (min-width: $width_sm_min) {
    display: inherit;
  }
}
._show-magic-to-tablet {
  display: none;
  @media (min-width: $width_magic) and (max-width: $width_sm_min) {
    display: inherit;
  }
}



// 
// Special User Agent detection classes
//

// only for tablet, mobile, regardless of breakpoint
// ._hideHandheld, %_hideHandheld {
.handheld {
  ._hideHandheld {
    display: none !important;
  }
  ._showHandheld {
    display: block !important;
  }
}







